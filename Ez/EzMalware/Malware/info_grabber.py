import psutil
import os
import platform
import socket
import wmi


class Grabber:
    def get_cpu_info()-> dict:
        data = {}
        data['cores'] = psutil.cpu_count()
        data['frequency']= psutil.cpu_freq().current
        data['cpu_usage'] = psutil.cpu_percent(interval=1, percpu=True)
        return data

    def get_ram_info() -> dict:
        data = {}
        data['ram_total'] = str((psutil.virtual_memory().total *1e-9))[:4] +" gb"
        data['ram_available'] = str((psutil.virtual_memory().available*1e-9))[:4] +" gb"
        data['ram_used'] = str((psutil.virtual_memory().used*1e-9))[:4] +" gb"
        data['ram_percent'] = psutil.virtual_memory().percent
        return data
    def get_disk_info() -> dict:
        disk_partitions = psutil.disk_partitions(all=False)
        disk_usage = {}

        for partition in disk_partitions:
            try:
                usage = psutil.disk_usage(partition.mountpoint)
                disk_usage[partition.device] = {
                    'total': str((usage.total *1e-9))[:4] +" gb", 
                    'used': str((usage.used *1e-9))[:4] +" gb",
                    'free': str((usage.free *1e-9))[:4]+" gb" ,
                    'percent': usage.percent
                }
            except PermissionError:
                continue
        return disk_usage
    
    def get_motherboard_info()-> dict:
        c = wmi.WMI()
        motherboard = c.Win32_BaseBoard()[0]
        
        data = {}
        data['manufacturer'] = motherboard.Manufacturer
        data['model'] = motherboard.Product
        data['serial_number'] = motherboard.SerialNumber

        return data

    def get_screen_info()-> dict:
        c = wmi.WMI()
        screens = c.Win32_DesktopMonitor()

        screen_info = []
        for screen in screens:
            info = {}
            try:
                info['manufacturer'] = screen.Manufacturer
            except :
                info['manufacturer'] = "couldn't fetch that"

            info['model'] = screen.Caption
            info['screen_size'] = f"{screen.ScreenWidth}x{screen.ScreenHeight}"

            screen_info.append(info)

        return screen_info
    
    def get_os_info()-> dict:
        os_info = {}
        os_info['system'] = platform.system()
        os_info['release'] = platform.release()
        os_info['version'] = platform.version()
        os_info['architecture'] = platform.machine()

        return os_info

    def get_network_info()-> dict:
        network_info = {}
        network_info['hostname'] = socket.gethostname()
        network_info['ip_addresses'] = socket.gethostbyname_ex(socket.gethostname())[2]
        return network_info

    def get_gpu_info()-> dict:
        c = wmi.WMI(namespace='root\\CIMV2')
        gpus = c.Win32_VideoController()
        gpu_info = []
        for gpu in gpus:
            info = {
                'name': gpu.Name,
                'driver_version': gpu.DriverVersion,
                'memory': gpu.AdapterRAM,
                'status': gpu.Status
            }
            gpu_info.append(info)
        return gpu_info

    def get_running_processes() -> list:
        running_processes = []
        for process in psutil.process_iter(['pid', 'name']):
            running_processes.append({'pid': process.pid, 'name': process.name()})
        return running_processes 

    
    def get_all() -> dict:
        data = {}
        data['cpu']         = Grabber.get_cpu_info()
        data['gpu']         = Grabber.get_gpu_info()
        data["os"]          = Grabber.get_os_info()
        data["screen"]      = Grabber.get_screen_info()
        data["disks"]       = Grabber.get_disk_info()
        data["ram"]         = Grabber.get_ram_info()
        data["motherboard"] = Grabber.get_motherboard_info()
        data['network']     = Grabber.get_network_info()
        data["running_processes"] = Grabber.get_running_processes()
        return data
    
    